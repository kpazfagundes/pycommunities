{"version":3,"sources":["Components/header.jsx","App.js","serviceWorker.js","Components/mapcontainer.jsx","index.js"],"names":["withStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","flexBasis","gridList","transform","gridListTile1","bigIMG","maxHeight","props","classes","react_default","a","createElement","className","GridList_default","cols","GridListTile_default","key","src","alt","ControlledExpansionPanels","state","expanded","handleChange","panel","event","_this","setState","_this2","this","ExpansionPanel_default","back1","onChange","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","Typography_default","Avatar_default","bigAvatar","headingTop","ExpansionPanelDetails_default","href","people","map","person","i","imgSrc","heading","name","title","detail","dinamica","React","Component","width","verticalAlign","margin","fontSize","typography","pxToRem","flexShrink","color","lineHeight","headingTitle","secondaryHeading","palette","text","secondary","height","Boolean","window","location","hostname","match","mapStyles","MapContainer","_Component","_getPrototypeOf2","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","marker","e","onClose","inherits","createClass","value","dist","google","zoom","style","initialCenter","lat","lng","onClick","visible","GoogleApiWrapper","apiKey","__webpack_require__","d","__webpack_exports__","App","ReactDOM","render","top","mapcontainer","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8351f687.chunk.js","sourcesContent":["// import React, { Component } from \"react\";\n// import WOW from \"wowjs\";\n\n// class Skills extends Component {\n\n//   componentDidMount() {\n//     const wow = new WOW.WOW();\n//     wow.init();\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//        <img src=\"https://raw.githubusercontent.com/kpazfagundes/pycommunities/master/src/Images/save-the-date.gif\"/>\n//       </div>\n//     )\n//    }\n// }\n// export default Skills;\n\n// import React from 'react';\n// import PropTypes from 'prop-types';\n// import { withStyles } from '@material-ui/core/styles';\n// import classnames from 'classnames';\n// import Card from '@material-ui/core/Card';\n// import CardMedia from '@material-ui/core/CardMedia';\n// import red from '@material-ui/core/colors/red';\n// const styles = theme => ({\n//   card: {\n//     maxWidth: 250,\n//     maxHeight: '95%'\n//   },\n//   media: {\n//     height: 0,\n//     paddingTop: '56.25%', // 16:9\n//   },\n// });\n\n// class RecipeReviewCard extends React.Component {\n//   state = { expanded: false };\n\n//   handleExpandClick = () => {\n//     this.setState(state => ({ expanded: !state.expanded }));\n//   };\n\n//   render() {\n//     const { classes } = this.props;\n\n//     return (\n//       <div>\n\n//         <Card className={classes.card}>\n//           <CardMedia\n//             className={classes.media}\n//             image=\"https://raw.githubusercontent.com/kpazfagundes/pycommunities/master/src/Images/save-the-date.gif\"\n//             title=\"Paella dish\"\n//           />\n//         </Card>\n//         <Card className={classes.card}>\n//           <CardMedia\n//             className={classes.media}\n//             image=\"https://raw.githubusercontent.com/kpazfagundes/pycommunities/master/src/Images/pycommex.png\"\n//             title=\"Paella dish\" /></Card>\n//       </div>\n//     );\n//   }\n// }\n\n// RecipeReviewCard.propTypes = {\n//   classes: PropTypes.object.isRequired,\n// };\n\n// export default withStyles(styles)(RecipeReviewCard);\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: '#BBDEFB',\n    flexBasis: '95%',\n\n\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    transform: 'translateZ(0)',\n  },\n   gridListTile1:{\n    flexBasis: '70%',\n  },\n  bigIMG: {\n    maxHeight: 150,\n  },\n });\n\nfunction SingleLineGridList(props) {\n  const { classes } = props;\n\n  return (\n    <div className={classes.root}>\n      <GridList className={classes.gridList} cols={2}>\n          <GridListTile className={classes.gridListTile1} key={\"https://raw.githubusercontent.com/kpazfagundes/pycommunities/master/src/Images/save-the-date.gif\"}>\n            <img className={classes.bigIMG} src={\"https://raw.githubusercontent.com/kpazfagundes/pycommunities/master/src/Images/save-the-date.gif\"} alt={\"save\"} />\n          </GridListTile>\n      </GridList>\n    </div>\n  );\n}\n\nSingleLineGridList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SingleLineGridList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Avatar from '@material-ui/core/Avatar';\nimport people from './people';\nimport Header from './Components/header'\n\nconst styles = theme => ({\n  root: {\n    width: '95%',\n    verticalAlign: 'middle',\n    margin: 20,\n    backgroundColor: '#4dabf5'\n  },\n  headingTop: {\n    fontSize: theme.typography.pxToRem(18),\n    width: '100%',\n    flexShrink: 0,\n    verticalAlign: 'middle',\n    color: '#757575',\n    lineHeight: '100px'\n\n  },\n  headingTitle: {\n    fontSize: theme.typography.pxToRem(18),\n    width: '100%',\n    flexBasis: '30%',\n    flexShrink: 0,\n    verticalAlign: 'middle',\n    color: '#757575',\n    lineHeight: '100px'\n\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(18),\n    width: '100%',\n    flexShrink: 0,\n    verticalAlign: 'middle',\n    color: '#757575',\n    lineHeight: '50px',\n    flexBasis: '70%',\n\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n    margin: 20,\n    width: '80%',\n\n  },\n  back1: {\n    backgroundColor: '#ffef62'\n  },\n  bigAvatar: {\n    margin: 10,\n    width: 100,\n    height: 100,\n    flexBasis: '20%',\n  },\n\n});\n\nclass ControlledExpansionPanels extends React.Component {\n  state = {\n    expanded: null,\n  };\n\n  handleChange = panel => (event, expanded) => {\n    this.setState({\n      expanded: expanded ? panel : false,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { expanded } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <ExpansionPanel className={classes.back1} expanded={expanded === 'panel0'} onChange={this.handleChange('panel0')}>\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n            <Typography><Avatar src='https://raw.githubusercontent.com/kpazfagundes/pycommunities/master/src/Images/save-the-date.gif' className={classes.bigAvatar} /></Typography>\n            <Typography className={classes.headingTop}>Sobre o evento</Typography>            \n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <Typography>\n              As comunidades de Python de BH (PyLadies, PyData e PythonBH) se reuniram para fazer o\n            PyCommunities Experience no dia 26/01/2019 na CI&T. O evento é sem fins lucrativos, que\n            tem como objetivo reunir todas as tribos dessa tecnologia. Vamos compartilhar informações\n             e experiências da nossa linguagem favorita que a cada dia vem conquistando cada vez mais\n              espaço no mercado, além de abordar outras coisas muito importantes como inclusão e\n              diversidade.\n              Se você é um PySer que tem um tema bacana que queira compartilhar, submeta sua palestra\n               no <a href=\"https://goo.gl/forms/lHRJr8QZP8NdCMiH2\">link</a> e se você ainda não conseguiu pensar\n               num tema bacana para compartilhar, vá no evento e nos ajude a fortalecer a comunidade!\n               *As inscrições para o evento serão recebidas através da plataforma Meetup, no grupo\n               PythonBH (<a href=\"https://www.meetup.com/pt-BR/PythonMG/\">link</a>)\n              </Typography>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n        {people.map((person, i) =>\n          <ExpansionPanel className={classes.back1} expanded={expanded === 'panel' + (i + 1)} onChange={this.handleChange('panel' + (i + 1))}>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n              <Typography><Avatar src={person.imgSrc} className={classes.bigAvatar} /></Typography>\n              <Typography className={classes.heading}>{person.name}<br />- {person.title}</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <Typography>\n                Sobre o(a) palestrante: {person.detail}\n              </Typography>\n            </ExpansionPanelDetails>\n            <ExpansionPanelDetails>\n              <Typography>\n                Dinâmica da palestra: {person.dinamica}\n              </Typography>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n        )}        \n      </div>\n    );\n  }\n}\n\nControlledExpansionPanels.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ControlledExpansionPanels);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import React, { Component } from 'react';\n// import GoogleMapReact from 'google-map-react';\n \n// const AnyReactComponent = ({ text }) => <div>{text}</div>;\n \n// class SimpleMap extends Component {\n//   static defaultProps = {\n//     center: {\n//       lat: -19.9206292,\n//       lng: -43.9223219\n//     },\n//     zoom: 20\n//   };\n \n//   render() {\n//     return (\n//       // Important! Always set the container height explicitly\n//       <div style={{ height: '100vh', width: '100%' }}>\n//         <GoogleMapReact\n//           bootstrapURLKeys={{ key:'AIzaSyBqk4jm64RI3vUxP8aHn5w-EhQpXs6c3b4'}}\n//           defaultCenter={this.props.center}\n//           defaultZoom={this.props.zoom}\n//         >\n//           <AnyReactComponent\n//             lat={-19.9206292}\n//             lng={-43.9223219}\n//             text={'CI&T'}\n            \n//           />\n//         </GoogleMapReact>\n//       </div>\n//     );\n//   }\n// }\n \n// export default SimpleMap;\n\nimport React, { Component } from 'react';\nimport {Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\n\n\nconst mapStyles = {\n  width: '95%',\n  height: '95%',  \n};\n\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: true,  //Hides or the shows the infoWindow\n    activeMarker: {},          //Shows the active marker upon click\n    selectedPlace: {}          //Shows the infoWindow to the selected place upon a marker\n  };\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n  \n  render() {\n    return (\n      <Map\n        google={this.props.google}\n        zoom={17}\n        style={mapStyles}\n        initialCenter={{ lat: -19.920293, lng: -43.9198396}}>\n        <Marker\n          onClick={this.onMarkerClick}\n          name={'PyCommunities Experience: Sede da CI&T (Av. dos andradas, 3000 - 3° andar - Santa Efigênia/Belo Horizonte)'}\n          \n        />\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n          </div>\n        </InfoWindow>\n      </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyBqk4jm64RI3vUxP8aHn5w-EhQpXs6c3b4'\n})(MapContainer);\n\n// export default GoogleApiWrapper(\n//   (props) => ({\n//     apiKey: props.apiKey\n//   }\n// ))(MapContainer)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport MapContainer from './Components/mapcontainer'\nimport Header from './Components/header'\n\nReactDOM.render(\n    <div>\n        <span><img src=\"./pycommex.png\" width='50%' top='10px'/></span>    \n        <App/>\n        <MapContainer/>\n        \n    </div>\n\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nexport { App };"],"sourceRoot":""}